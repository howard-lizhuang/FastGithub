name: Release FastGithub

on:
  release:
    types: [created]  # 仅在创建新的Release时触发工作流

jobs:
  build-and-release:
    runs-on: windows-latest  # 根据项目需求，这里假设主要在Windows环境下构建和发布，如果项目支持多平台，可进行相应调整

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up.NET Core SDK
      uses: actions/setup-netcore@v3
      with:
        dotnet-version: '6.0'  # 根据项目实际情况填写正确的.NET Core版本

    - name: Restore NuGet packages
      run: dotnet restore

    - name: Build the project
      run: dotnet build -c Release --no-restore

    - name: Publish the UI application
      run: dotnet publish FastGithub.UI/FastGithub.UI.csproj -c Release -o publish_output --self-contained true

    - name: Zip the release files
      run: Compress-Archive -Path publish_output/* -DestinationPath FastGithub-${{ github.event.release.tag_name }}.zip  # 将发布目录中的所有文件压缩成一个以版本号命名的ZIP文件

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub自动生成的令牌来进行认证
      with:
        tag_name: ${{ github.event.release.tag_name }}
        release_name: Release ${{ github.event.release.tag_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: FastGithub-${{ github.event.release.tag_name }}.zip
        asset_name: FastGithub-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
